(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{646:function(s,a,t){"use strict";t.r(a);var r=t(5),n=Object(r.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[s._v("介绍")]),t("p",[s._v("Java学习笔记")])]),t("h5",{attrs:{id:"位操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#位操作"}},[s._v("#")]),s._v(" 位操作")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 左移运算符，num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("相当于num乘以"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("  低位补"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 右移运算符，num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("相当于num除以"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("  正数高位补"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，负数高位补"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 无符号右移，忽略符号位，空位都以"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("补齐\n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 模运算 取余\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("   位异或 第一个操作数的的第n位于第二个操作数的第n位相反，那么结果的第n为也为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，否则为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 与运算 第一个操作数的的第n位于第二个操作数的第n位如果都是"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，那么结果的第n为也为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，否则为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  或运算 第一个操作数的的第n位于第二个操作数的第n位 只要有一个是"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，那么结果的第n为也为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，否则为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 非运算 操作数的第n位为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，那么结果的第n位为"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("，反之，也就是取反运算（一元操作符：只操作一个数）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("ConcurrentHashMap 面试题 线程池底层原理 线程间的通信 线程的方法")])])}),[],!1,null,null,null);a.default=n.exports}}]);