(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{627:function(t,s,a){"use strict";a.r(s);var r=a(5),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("面试题")]),a("p",[t._v("Mybatis")])]),a("h4",{attrs:{id:"mybatis的实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis的实现原理"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Mybatis的实现原理")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("读取mybatis-config.xml配置文件，获取数据库连接信息。")])]),t._v(" "),a("li",[a("p",[t._v("解析映射器文件，往knownMappers存放每个映射器的里面的sql信息，为key-value形式，key为映射器接口的Class类对象，value值为MapperProxyFactory对象。（knownMappers.put(type, new MapperProxyFactory<>(type));）")])]),t._v(" "),a("li",[a("p",[t._v("构建会话工厂SqlSessionFactory（实现类DefaultSqlSessionFactory），主要存放了Configuration类，里面存放了所有环境配置的信息。")])]),t._v(" "),a("li",[a("p",[t._v("创建会话对象SqlSession")])])]),t._v(" "),a("h4",{attrs:{id:"mybatis的缓存实现逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis的缓存实现逻辑"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Mybatis的缓存实现逻辑")])]),t._v(" "),a("h4",{attrs:{id:"和-的区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别是什么"}},[t._v("#")]),t._v(" "),a("strong",[t._v("#{} 和 ${} 的区别是什么？")])]),t._v(" "),a("h4",{attrs:{id:"mybatis中动态sql标签的执行原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis中动态sql标签的执行原理"}},[t._v("#")]),t._v(" MyBatis中动态sql标签的执行原理")]),t._v(" "),a("h4",{attrs:{id:"myabtis有哪些执行器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#myabtis有哪些执行器"}},[t._v("#")]),t._v(" Myabtis有哪些执行器？")])])}),[],!1,null,null,null);s.default=e.exports}}]);